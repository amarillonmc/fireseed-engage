# 种火集结号 - 下一步计划
时间戳: 2025-04-10 00:00:00

## 已完成工作总结

我们已经完成了优先级1的所有任务，实现了游戏的核心循环：

1. **士兵类 (Soldier.php)**
   - 实现了士兵的基本属性和方法
   - 支持士兵的训练、升级和数量管理
   - 提供了获取士兵攻击力、防御力和移动速度的方法
   - 实现了训练完成检查功能

2. **资源生产系统**
   - 修改Resource类，添加资源产出功能
   - 实现了基于设施的资源自动产出
   - 支持资源存储上限管理
   - 实现了思考回路的产出功能
   - 创建了资源产出检查脚本和API

3. **建筑完成检查系统**
   - 修改Facility类，添加建筑完成检查方法
   - 实现了设施建造和升级完成的检查
   - 创建了建筑完成检查脚本和API
   - 修改前端JavaScript，定期检查建筑完成情况

4. **训练完成检查系统**
   - 实现了士兵训练完成的检查功能
   - 创建了训练完成检查脚本和API
   - 修改前端JavaScript，定期检查训练完成情况
   - 创建了兵营页面，支持士兵训练和管理

5. **基础前端界面**
   - 实现了主页、登录页和注册页
   - 创建了兵营页面
   - 实现了资源显示和更新
   - 添加了通知系统

## 下一步计划（优先级2：地图和探索）

### 1. 地图生成系统
**目标**: 实现随机地图生成，创建不同类型的地图格子。

**具体任务**:
1. 创建Map类，实现地图格子的基本属性和方法
2. 设计地图生成算法，确保地图平衡
3. 实现不同类型的地图格子（资源点、NPC城池等）
4. 创建地图初始化脚本

**文件**:
- `includes/classes/Map.php` - 地图类
- `includes/classes/MapGenerator.php` - 地图生成器类
- `admin/generate_map.php` - 地图生成管理页面

**预计完成时间**: 2025-04-15

### 2. 地图探索功能
**目标**: 实现地图的可见性系统，允许玩家查看周围地块。

**具体任务**:
1. 实现地图的可见性系统
2. 创建地图探索界面
3. 实现地图格子的详细信息显示
4. 添加地图导航功能

**文件**:
- `map.php` - 地图页面
- `api/get_map.php` - 获取地图数据API
- `api/explore_map.php` - 探索地图API
- `assets/js/map.js` - 地图相关JavaScript

**预计完成时间**: 2025-04-20

### 3. 地图占领功能
**目标**: 实现资源点和空白地块的占领，设计占领机制和条件。

**具体任务**:
1. 实现资源点和空白地块的占领
2. 设计占领机制和条件
3. 创建占领后的资源收益系统
4. 实现占领地块的管理功能

**文件**:
- `api/occupy_tile.php` - 占领地块API
- `api/abandon_tile.php` - 放弃地块API
- `territory.php` - 领地管理页面

**预计完成时间**: 2025-04-25

## 实现步骤

### 步骤1: 地图生成系统

1. **创建Map类**
   - 实现地图格子的基本属性和方法
   - 支持地图格子的查询和修改
   - 实现地图格子的类型和属性

2. **设计地图生成算法**
   - 实现随机地图生成
   - 确保资源点分布均匀
   - 设置NPC城池的位置和强度
   - 创建特殊地点（如银白之孔）

3. **创建地图初始化脚本**
   - 实现地图的初始化
   - 支持地图的重置和扩展
   - 添加管理员控制界面

### 步骤2: 地图探索功能

1. **实现地图的可见性系统**
   - 设计玩家的视野范围
   - 实现地图格子的可见性状态
   - 支持地图格子的探索和发现

2. **创建地图探索界面**
   - 设计地图显示界面
   - 实现地图的缩放和平移
   - 添加地图格子的详细信息显示

3. **实现地图导航功能**
   - 支持地图的快速导航
   - 实现地图坐标的搜索
   - 添加地图标记功能

### 步骤3: 地图占领功能

1. **实现资源点和空白地块的占领**
   - 设计占领机制和条件
   - 实现占领过程和结果
   - 支持占领地块的管理

2. **创建占领后的资源收益系统**
   - 设计资源点的产出规则
   - 实现资源的自动收集
   - 支持资源产出的提升和优化

3. **实现占领地块的管理功能**
   - 设计领地管理界面
   - 实现领地的防御和升级
   - 支持领地的放弃和转让

## 技术实现注意事项

1. **性能优化**
   - 地图数据应该分块加载，避免一次加载整个地图
   - 地图探索和占领操作应该使用异步请求，避免阻塞用户界面
   - 地图渲染应该使用Canvas或WebGL，提高渲染性能

2. **用户体验**
   - 提供清晰的地图图例和说明
   - 实现地图操作的快捷键和手势
   - 添加地图加载进度提示

3. **安全性**
   - 所有地图操作都应该验证用户身份和权限
   - 防止地图坐标的越界和注入
   - 验证占领操作的合法性
